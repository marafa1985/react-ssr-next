{"ast":null,"code":"import _toConsumableArray from \"@babel/runtime-corejs2/helpers/esm/toConsumableArray\";\nimport _classCallCheck from \"@babel/runtime-corejs2/helpers/esm/classCallCheck\";\nimport _createClass from \"@babel/runtime-corejs2/helpers/esm/createClass\";\nimport _possibleConstructorReturn from \"@babel/runtime-corejs2/helpers/esm/possibleConstructorReturn\";\nimport _getPrototypeOf from \"@babel/runtime-corejs2/helpers/esm/getPrototypeOf\";\nimport _assertThisInitialized from \"@babel/runtime-corejs2/helpers/esm/assertThisInitialized\";\nimport _inherits from \"@babel/runtime-corejs2/helpers/esm/inherits\";\nimport _defineProperty from \"@babel/runtime-corejs2/helpers/esm/defineProperty\";\nvar _jsxFileName = \"F:\\\\2019\\\\Testing\\\\heyjobs\\\\components\\\\JobList.tsx\";\nvar __jsx = React.createElement;\nimport React, { Component } from 'react';\nimport Link from 'next/link';\nimport { JobsGrid, JobHeader, JobDetails } from '../Elements';\nimport SearchBar from './SearchBar';\n\nvar JobList =\n/*#__PURE__*/\nfunction (_Component) {\n  _inherits(JobList, _Component);\n\n  function JobList(props) {\n    var _this;\n\n    _classCallCheck(this, JobList);\n\n    _this = _possibleConstructorReturn(this, _getPrototypeOf(JobList).call(this, props));\n\n    _defineProperty(_assertThisInitialized(_this), \"filterJobList\", function (searchValue) {\n      if (searchValue) {\n        var newJobList = _this.state.jobList.filter(function (job) {\n          return job.description.includes(searchValue);\n        });\n\n        _this.setState({\n          jobList: _toConsumableArray(newJobList)\n        });\n      } else {\n        _this.setState({\n          jobList: _toConsumableArray(_this.props.jobList)\n        });\n      }\n    });\n\n    _this.state = {\n      jobList: _toConsumableArray(_this.props.jobList)\n    };\n    return _this;\n  }\n\n  _createClass(JobList, [{\n    key: \"render\",\n    value: function render() {\n      var jobList = this.state.jobList;\n      return __jsx(\"div\", {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 39\n        },\n        __self: this\n      }, __jsx(SearchBar, {\n        onFilterJob: this.filterJobList.bind(this),\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 40\n        },\n        __self: this\n      }), jobList.length === 0 ? __jsx(\"span\", {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 42\n        },\n        __self: this\n      }, \"No job found\") : __jsx(JobsGrid, {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 42\n        },\n        __self: this\n      }, __jsx(\"li\", {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 43\n        },\n        __self: this\n      }, jobList.length, \" jobs found\"), jobList.map(function (job) {\n        return __jsx(\"li\", {\n          key: job.id,\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 47\n          },\n          __self: this\n        }, __jsx(\"div\", {\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 48\n          },\n          __self: this\n        }, __jsx(JobHeader, {\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 49\n          },\n          __self: this\n        }, __jsx(Link, {\n          href: \"/job/[id]\",\n          as: \"/job/\".concat(job.id),\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 50\n          },\n          __self: this\n        }, __jsx(\"a\", {\n          title: job.title,\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 51\n          },\n          __self: this\n        }, job.title)), __jsx(\"span\", {\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 53\n          },\n          __self: this\n        }, job.employment_type)), __jsx(JobDetails, {\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 54\n          },\n          __self: this\n        }, job.description)));\n      })));\n    }\n  }]);\n\n  return JobList;\n}(Component);\n\nexport default JobList;","map":{"version":3,"sources":["F:/2019/Testing/heyjobs/components/JobList.tsx"],"names":["React","Component","Link","JobsGrid","JobHeader","JobDetails","SearchBar","JobList","props","searchValue","newJobList","state","jobList","filter","job","description","includes","setState","filterJobList","bind","length","map","id","title","employment_type"],"mappings":";;;;;;;;;;AAAA,OAAOA,KAAP,IAAgBC,SAAhB,QAAiC,OAAjC;AACA,OAAOC,IAAP,MAAiB,WAAjB;AACA,SAASC,QAAT,EAAmBC,SAAnB,EAA8BC,UAA9B,QAAgD,aAAhD;AAEA,OAAOC,SAAP,MAAsB,aAAtB;;IAWMC,O;;;;;AACJ,mBAAYC,KAAZ,EAAmB;AAAA;;AAAA;;AACjB,iFAAMA,KAAN;;AADiB,oEAOH,UAACC,WAAD,EAAiB;AAC/B,UAAIA,WAAJ,EAAiB;AACf,YAAIC,UAAU,GAAG,MAAKC,KAAL,CAAWC,OAAX,CAAmBC,MAAnB,CAA0B,UAAAC,GAAG;AAAA,iBAAIA,GAAG,CAACC,WAAJ,CAAgBC,QAAhB,CAAyBP,WAAzB,CAAJ;AAAA,SAA7B,CAAjB;;AACA,cAAKQ,QAAL,CAAc;AACZL,UAAAA,OAAO,qBAAMF,UAAN;AADK,SAAd;AAGD,OALD,MAKO;AACL,cAAKO,QAAL,CAAc;AACZL,UAAAA,OAAO,qBAAM,MAAKJ,KAAL,CAAWI,OAAjB;AADK,SAAd;AAGD;AACF,KAlBkB;;AAGjB,UAAKD,KAAL,GAAa;AACXC,MAAAA,OAAO,qBAAM,MAAKJ,KAAL,CAAWI,OAAjB;AADI,KAAb;AAHiB;AAMlB;;;;6BAaQ;AAAA,UACDA,OADC,GACW,KAAKD,KADhB,CACDC,OADC;AAEP,aACE;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,SACE,MAAC,SAAD;AAAW,QAAA,WAAW,EAAE,KAAKM,aAAL,CAAmBC,IAAnB,CAAwB,IAAxB,CAAxB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,QADF,EAGGP,OAAO,CAACQ,MAAR,KAAmB,CAAnB,GAAuB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,wBAAvB,GAAmD,MAAC,QAAD;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,SAClD;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,SAAKR,OAAO,CAACQ,MAAb,gBADkD,EAGhDR,OAAO,CAACS,GAAR,CAAY,UAACP,GAAD,EAAmB;AAC7B,eACE;AAAI,UAAA,GAAG,EAAEA,GAAG,CAACQ,EAAb;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,WACE;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,WACE,MAAC,SAAD;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,WACE,MAAC,IAAD;AAAM,UAAA,IAAI,EAAC,WAAX;AAAwB,UAAA,EAAE,iBAAUR,GAAG,CAACQ,EAAd,CAA1B;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,WACE;AAAG,UAAA,KAAK,EAAER,GAAG,CAACS,KAAd;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,WAAsBT,GAAG,CAACS,KAA1B,CADF,CADF,EAIE;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,WAAOT,GAAG,CAACU,eAAX,CAJF,CADF,EAME,MAAC,UAAD;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,WAAaV,GAAG,CAACC,WAAjB,CANF,CADF,CADF;AAYD,OAbD,CAHgD,CAHtD,CADF;AAyBD;;;;EA/CmBd,S;;AAkDtB,eAAeM,OAAf","sourcesContent":["import React, { Component } from 'react'\r\nimport Link from 'next/link';\r\nimport { JobsGrid, JobHeader, JobDetails } from '../Elements'\r\nimport { IJobItem } from '../Types/Types'\r\nimport SearchBar from './SearchBar';\r\n\r\n\r\ninterface IProps {\r\n  jobList: IJobItem[]\r\n}\r\n\r\ninterface IState {\r\n  jobList: IJobItem[]\r\n}\r\n\r\nclass JobList extends Component<IProps, IState> {\r\n  constructor(props) {\r\n    super(props)\r\n\r\n    this.state = {\r\n      jobList: [...this.props.jobList]\r\n    }\r\n  }\r\n  filterJobList = (searchValue) => {\r\n    if (searchValue) {\r\n      let newJobList = this.state.jobList.filter(job => job.description.includes(searchValue))\r\n      this.setState({\r\n        jobList: [...newJobList]\r\n      })\r\n    } else {\r\n      this.setState({\r\n        jobList: [...this.props.jobList]\r\n      })\r\n    }\r\n  }\r\n  render() {\r\n    let { jobList } = this.state;\r\n    return (\r\n      <div>\r\n        <SearchBar onFilterJob={this.filterJobList.bind(this)} />\r\n\r\n        {jobList.length === 0 ? <span>No job found</span> : <JobsGrid>\r\n          <li>{jobList.length} jobs found</li>\r\n          {\r\n            jobList.map((job: IJobItem) => {\r\n              return (\r\n                <li key={job.id} >\r\n                  <div>\r\n                    <JobHeader>\r\n                      <Link href='/job/[id]'  as={`/job/${job.id}`}  >\r\n                        <a title={job.title}>{job.title}</a>\r\n                      </Link>\r\n                      <span>{job.employment_type}</span></JobHeader>\r\n                    <JobDetails>{job.description}</JobDetails>\r\n                  </div>\r\n                </li>\r\n              )\r\n            })\r\n          }\r\n        </JobsGrid>}\r\n      </div>\r\n    )\r\n  }\r\n}\r\n\r\nexport default JobList\r\n"]},"metadata":{},"sourceType":"module"}