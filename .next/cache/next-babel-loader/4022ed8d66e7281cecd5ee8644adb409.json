{"ast":null,"code":"import _defineProperty from \"@babel/runtime-corejs2/helpers/esm/defineProperty\";\nvar _jsxFileName = \"F:\\\\2019\\\\Testing\\\\heyjobs\\\\components\\\\JobList.tsx\";\nvar __jsx = React.createElement;\nimport React, { Component } from 'react';\nimport Link from 'next/link';\nimport { JobsGrid, JobHeader, JobDetails } from '../Elements';\nimport SearchBar from './SearchBar';\n\nclass JobList extends Component {\n  constructor(props) {\n    super(props);\n\n    _defineProperty(this, \"filterJobList\", searchValue => {\n      if (searchValue) {\n        let newJobList = this.state.jobList.filter(job => job.description.includes(searchValue));\n        this.setState({\n          jobList: [...newJobList]\n        });\n      } else {\n        this.setState({\n          jobList: [...this.props.jobList]\n        });\n      }\n    });\n\n    this.state = {\n      jobList: [...this.props.jobList]\n    };\n  }\n\n  render() {\n    let {\n      jobList\n    } = this.state;\n    return __jsx(\"div\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 39\n      },\n      __self: this\n    }, __jsx(SearchBar, {\n      onFilterJob: this.filterJobList.bind(this),\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 40\n      },\n      __self: this\n    }), jobList.length === 0 ? __jsx(\"span\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 42\n      },\n      __self: this\n    }, \"No job found\") : __jsx(JobsGrid, {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 42\n      },\n      __self: this\n    }, __jsx(\"li\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 43\n      },\n      __self: this\n    }, jobList.length, \" jobs found\"), jobList.map(job => {\n      return __jsx(\"li\", {\n        key: job.id,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 47\n        },\n        __self: this\n      }, __jsx(\"div\", {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 48\n        },\n        __self: this\n      }, __jsx(JobHeader, {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 49\n        },\n        __self: this\n      }, __jsx(Link, {\n        href: \"/job/[id]\",\n        as: `/job/${job.id}`,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 50\n        },\n        __self: this\n      }, __jsx(\"a\", {\n        title: job.title,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 51\n        },\n        __self: this\n      }, job.title)), __jsx(\"span\", {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 53\n        },\n        __self: this\n      }, job.employment_type)), __jsx(JobDetails, {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 54\n        },\n        __self: this\n      }, job.description)));\n    })));\n  }\n\n}\n\nexport default JobList;","map":{"version":3,"sources":["F:/2019/Testing/heyjobs/components/JobList.tsx"],"names":["React","Component","Link","JobsGrid","JobHeader","JobDetails","SearchBar","JobList","constructor","props","searchValue","newJobList","state","jobList","filter","job","description","includes","setState","render","filterJobList","bind","length","map","id","title","employment_type"],"mappings":";;;AAAA,OAAOA,KAAP,IAAgBC,SAAhB,QAAiC,OAAjC;AACA,OAAOC,IAAP,MAAiB,WAAjB;AACA,SAASC,QAAT,EAAmBC,SAAnB,EAA8BC,UAA9B,QAAgD,aAAhD;AAEA,OAAOC,SAAP,MAAsB,aAAtB;;AAWA,MAAMC,OAAN,SAAsBN,SAAtB,CAAgD;AAC9CO,EAAAA,WAAW,CAACC,KAAD,EAAQ;AACjB,UAAMA,KAAN;;AADiB,2CAOFC,WAAD,IAAiB;AAC/B,UAAIA,WAAJ,EAAiB;AACf,YAAIC,UAAU,GAAG,KAAKC,KAAL,CAAWC,OAAX,CAAmBC,MAAnB,CAA0BC,GAAG,IAAIA,GAAG,CAACC,WAAJ,CAAgBC,QAAhB,CAAyBP,WAAzB,CAAjC,CAAjB;AACA,aAAKQ,QAAL,CAAc;AACZL,UAAAA,OAAO,EAAE,CAAC,GAAGF,UAAJ;AADG,SAAd;AAGD,OALD,MAKO;AACL,aAAKO,QAAL,CAAc;AACZL,UAAAA,OAAO,EAAE,CAAC,GAAG,KAAKJ,KAAL,CAAWI,OAAf;AADG,SAAd;AAGD;AACF,KAlBkB;;AAGjB,SAAKD,KAAL,GAAa;AACXC,MAAAA,OAAO,EAAE,CAAC,GAAG,KAAKJ,KAAL,CAAWI,OAAf;AADE,KAAb;AAGD;;AAaDM,EAAAA,MAAM,GAAG;AACP,QAAI;AAAEN,MAAAA;AAAF,QAAc,KAAKD,KAAvB;AACA,WACE;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,OACE,MAAC,SAAD;AAAW,MAAA,WAAW,EAAE,KAAKQ,aAAL,CAAmBC,IAAnB,CAAwB,IAAxB,CAAxB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,MADF,EAGGR,OAAO,CAACS,MAAR,KAAmB,CAAnB,GAAuB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,sBAAvB,GAAmD,MAAC,QAAD;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,OAClD;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,OAAKT,OAAO,CAACS,MAAb,gBADkD,EAGhDT,OAAO,CAACU,GAAR,CAAaR,GAAD,IAAmB;AAC7B,aACE;AAAI,QAAA,GAAG,EAAEA,GAAG,CAACS,EAAb;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,SACE;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,SACE,MAAC,SAAD;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,SACE,MAAC,IAAD;AAAM,QAAA,IAAI,EAAC,WAAX;AAAwB,QAAA,EAAE,EAAG,QAAOT,GAAG,CAACS,EAAG,EAA3C;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,SACE;AAAG,QAAA,KAAK,EAAET,GAAG,CAACU,KAAd;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,SAAsBV,GAAG,CAACU,KAA1B,CADF,CADF,EAIE;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,SAAOV,GAAG,CAACW,eAAX,CAJF,CADF,EAME,MAAC,UAAD;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,SAAaX,GAAG,CAACC,WAAjB,CANF,CADF,CADF;AAYD,KAbD,CAHgD,CAHtD,CADF;AAyBD;;AA/C6C;;AAkDhD,eAAeT,OAAf","sourcesContent":["import React, { Component } from 'react'\r\nimport Link from 'next/link';\r\nimport { JobsGrid, JobHeader, JobDetails } from '../Elements'\r\nimport { IJobItem } from '../Types/Types'\r\nimport SearchBar from './SearchBar';\r\n\r\n\r\ninterface IProps {\r\n  jobList: IJobItem[]\r\n}\r\n\r\ninterface IState {\r\n  jobList: IJobItem[]\r\n}\r\n\r\nclass JobList extends Component<IProps, IState> {\r\n  constructor(props) {\r\n    super(props)\r\n\r\n    this.state = {\r\n      jobList: [...this.props.jobList]\r\n    }\r\n  }\r\n  filterJobList = (searchValue) => {\r\n    if (searchValue) {\r\n      let newJobList = this.state.jobList.filter(job => job.description.includes(searchValue))\r\n      this.setState({\r\n        jobList: [...newJobList]\r\n      })\r\n    } else {\r\n      this.setState({\r\n        jobList: [...this.props.jobList]\r\n      })\r\n    }\r\n  }\r\n  render() {\r\n    let { jobList } = this.state;\r\n    return (\r\n      <div>\r\n        <SearchBar onFilterJob={this.filterJobList.bind(this)} />\r\n\r\n        {jobList.length === 0 ? <span>No job found</span> : <JobsGrid>\r\n          <li>{jobList.length} jobs found</li>\r\n          {\r\n            jobList.map((job: IJobItem) => {\r\n              return (\r\n                <li key={job.id} >\r\n                  <div>\r\n                    <JobHeader>\r\n                      <Link href='/job/[id]'  as={`/job/${job.id}`}  >\r\n                        <a title={job.title}>{job.title}</a>\r\n                      </Link>\r\n                      <span>{job.employment_type}</span></JobHeader>\r\n                    <JobDetails>{job.description}</JobDetails>\r\n                  </div>\r\n                </li>\r\n              )\r\n            })\r\n          }\r\n        </JobsGrid>}\r\n      </div>\r\n    )\r\n  }\r\n}\r\n\r\nexport default JobList\r\n"]},"metadata":{},"sourceType":"module"}