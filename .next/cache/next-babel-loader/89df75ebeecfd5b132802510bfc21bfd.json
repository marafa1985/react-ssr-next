{"ast":null,"code":"import _defineProperty from \"@babel/runtime-corejs2/helpers/esm/defineProperty\";\nvar __jsx = React.createElement;\nimport React, { Component } from 'react';\nimport Link from 'next/link';\nimport { JobsGrid, JobHeader, JobDetails } from '../Elements';\nimport SearchBar from './SearchBar';\n\nclass JobList extends Component {\n  constructor(props) {\n    super(props);\n\n    _defineProperty(this, \"filterJobList\", searchValue => {\n      if (searchValue) {\n        let newJobList = this.state.jobList.filter(job => job.description.includes(searchValue));\n        this.setState({\n          jobList: [...newJobList]\n        });\n      } else {\n        this.setState({\n          jobList: [...this.props.jobList]\n        });\n      }\n    });\n\n    this.state = {\n      jobList: [...this.props.jobList]\n    };\n  }\n\n  render() {\n    let {\n      jobList\n    } = this.state;\n    return __jsx(\"div\", null, __jsx(SearchBar, {\n      onFilterJob: this.filterJobList.bind(this)\n    }), jobList.length === 0 ? __jsx(\"span\", null, \"No job found\") : __jsx(JobsGrid, null, __jsx(\"li\", null, jobList.length, \" jobs found\"), jobList.map(job => {\n      return __jsx(\"li\", {\n        key: job.id\n      }, __jsx(\"div\", null, __jsx(JobHeader, null, __jsx(Link, {\n        href: \"/job/[id]\",\n        as: `/job/${job.id}`\n      }, __jsx(\"a\", {\n        title: job.title\n      }, job.title)), __jsx(\"span\", null, job.employment_type)), __jsx(JobDetails, null, job.description)));\n    })));\n  }\n\n}\n\nexport default JobList;","map":null,"metadata":{},"sourceType":"module"}